# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-17 20:03
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import timezone_field.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='wooAttribute',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('wid', models.CharField(blank=True, default='', max_length=16, null=True, verbose_name='Woo ID')),
                ('name', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Name')),
                ('slug', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Slug')),
                ('type', models.CharField(blank=True, choices=[('text', 'Basic Text'), ('color picker', 'Color Picker'), ('image select', 'Image Select'), ('text label', 'Text Label')], default='', max_length=255, null=True, verbose_name='Type')),
                ('order_by', models.CharField(blank=True, choices=[('name', 'Sort by Name'), ('name_num', 'Sort by Name (Number)'), ('id', 'Sort by ID'), ('menu_order', 'Sort by Custom Menu Order')], default='', max_length=255, null=True, verbose_name='Order By')),
                ('has_archives', models.BooleanField(default=False, verbose_name='Has Archives?')),
            ],
            options={
                'verbose_name_plural': 'Product Attributes',
                'verbose_name': 'Product Attribute',
                'ordering': ['store', 'order_by', 'name'],
            },
        ),
        migrations.CreateModel(
            name='wooCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('wid', models.IntegerField(blank=True, default=0, null=True, verbose_name='Woo ID')),
                ('name', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Name')),
                ('slug', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Slug')),
                ('parent', models.IntegerField(default=0, verbose_name='Parent ID')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('display', models.CharField(choices=[('default', 'Default'), ('products', 'Products'), ('subcategories', 'Subcategories'), ('both', 'Display Both')], default='default', max_length=255, verbose_name='Display')),
                ('menu_order', models.IntegerField(default=0, verbose_name='Menu Order')),
                ('count', models.IntegerField(default=0, verbose_name='Count')),
                ('image_id', models.IntegerField(default=0, verbose_name='Image ID')),
                ('image_date_created', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Image Created')),
                ('image_date_modified', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Image Modified')),
                ('image_src', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Image SRC')),
                ('image_name', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Image Name')),
                ('image_alt', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Image Alt Text')),
            ],
            options={
                'verbose_name_plural': 'Product Categories',
                'verbose_name': 'Product Category',
                'ordering': ['store', 'name'],
            },
        ),
        migrations.CreateModel(
            name='wooImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, default='', max_length=16, null=True, verbose_name='Code')),
                ('name', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Name')),
            ],
            options={
                'verbose_name_plural': 'wooImage',
                'verbose_name': 'wooImage',
                'ordering': ['name', 'code'],
            },
        ),
        migrations.CreateModel(
            name='wooProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('wid', models.CharField(blank=True, default='', max_length=16, null=True, verbose_name='Woo ID')),
                ('name', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Name')),
                ('slug', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Slug')),
                ('permalink', models.URLField(blank=True, verbose_name='Permalink')),
                ('date_created', models.DateField(blank=True, help_text='READONLY. The date the product was created, in the site’s timezone.', null=True, verbose_name='Date Created')),
                ('date_modified', models.DateField(blank=True, help_text='READONLY. The date the product was last modified, in the site’s timezone.', null=True, verbose_name='Date Modified')),
                ('type', models.CharField(choices=[('simple', 'Simple'), ('grouped', 'Grouped'), ('external', 'External'), ('variable', 'Variable')], default='simple', help_text='Product type. Default is simple. In general, do not change this.', max_length=15, verbose_name='Type')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending'), ('private', 'Private'), ('publish', 'Published')], default='publish', help_text='Product status (post status). Default is publish.', max_length=15, verbose_name='Status')),
                ('featured', models.BooleanField(default=False, help_text='Featured product. Default is false.', verbose_name='Featured?')),
                ('catalog_visibility', models.CharField(choices=[('visible', 'Visible in Catalog and Search'), ('catalog', 'Only in Catalog'), ('search', 'Only in Search'), ('hidden', 'Hidden')], default='visible', help_text='Catalog visibility. Default is visible. Options: visible (Catalog and search), catalog (Only in catalog), search (Only in search) and hidden (Hidden from all).', max_length=10, verbose_name='Visibility')),
                ('description', models.TextField(blank=True, help_text='Product description.', null=True, verbose_name='Description')),
                ('short_description', models.TextField(blank=True, help_text='Product short description.', null=True, verbose_name='Short Description')),
                ('sku', models.CharField(blank=True, default='', help_text='Unique identifier.', max_length=255, null=True, verbose_name='SKU')),
                ('price', models.CharField(blank=True, default='', help_text='READONLY. Current product price. This is set from regular_price and sale_price.', max_length=255, null=True, verbose_name='Price')),
                ('regular_price', models.CharField(blank=True, default='', help_text='Product regular price.', max_length=255, null=True, verbose_name='Regular Price')),
                ('sale_price', models.CharField(blank=True, default='', help_text='Product sale price.', max_length=255, null=True, verbose_name='Sale Price')),
                ('date_on_sale_from', models.DateField(blank=True, help_text='Start date of sale price. Date in the YYYY-MM-DD format.', null=True, verbose_name='On Sale From')),
                ('date_on_sale_to', models.DateField(blank=True, help_text='End date of sale price. Date in the YYYY-MM-DD format.', null=True, verbose_name='On Sale To')),
                ('price_html', models.CharField(blank=True, default='', help_text='READONLY. Price formatted in HTML.', max_length=1000, null=True, verbose_name='Price HTML')),
                ('on_sale', models.BooleanField(default=False, help_text='READONLY. Shows if the product is on sale.', verbose_name='On Sale?')),
                ('purchasable', models.BooleanField(default=True, help_text='READONLY. Shows if the product can be bought.', verbose_name='Purchasable?')),
                ('total_sales', models.IntegerField(default=0, help_text='READONLY. Amount of sales.', verbose_name='Total Sales')),
                ('virtual', models.BooleanField(default=False, help_text='If the product is virtual. Virtual products are intangible and aren’t shipped. Default is false.', verbose_name='Virtual?')),
                ('downloadable', models.BooleanField(default=False, help_text='If the product is downloadable. Downloadable products give access to a file upon purchase. Default is false.', verbose_name='Downloadable?')),
                ('download_limit', models.IntegerField(default=-1, help_text='Amount of times the product can be downloaded, the -1 values means unlimited re-downloads. Default is -1.', verbose_name='Download Limit')),
                ('download_expiry', models.IntegerField(default=-1, help_text='Number of days that the customer has up to be able to download the product, the -1 means that downloads never expires. Default is -1.', verbose_name='Download Expiry')),
                ('download_type', models.CharField(choices=[('standard', 'Standard Product'), ('application', 'Application/Software'), ('music', 'Music')], default='standard', help_text="Download type, this controls the schema on the front-end. Default is standard. Options: 'standard' (Standard Product), application (Application/Software) and music (Music).", max_length=15, verbose_name='Download Type')),
                ('external_url', models.URLField(blank=True, default='', help_text='Product external URL. Only for external products.', null=True, verbose_name='External URL')),
                ('button_text', models.CharField(blank=True, default='', help_text='Product external button text. Only for external products.', max_length=255, null=True, verbose_name='Button Text')),
                ('tax_status', models.CharField(choices=[('taxable', 'Taxable'), ('shipping', 'Shipping Only'), ('none', 'None')], default='taxable', help_text='Tax status. Default is taxable. Options: taxable, shipping (Shipping only) and none.', max_length=15, verbose_name='Tax Status')),
                ('tax_class', models.CharField(blank=True, default='', help_text='The tax class.', max_length=255, null=True, verbose_name='Tax Class')),
                ('manage_stock', models.BooleanField(default=False, help_text='Stock management at product level. Default is false.', verbose_name='Manage Stock')),
                ('stock_quantity', models.IntegerField(default=0, help_text='Stock quantity. If is a variable product this value will be used to control stock for all variations, unless you define stock at variation level.', verbose_name='Stock Quantity')),
                ('in_stock', models.BooleanField(default=True, help_text='Controls whether or not the product is listed as “in stock” or “out of stock” on the frontend. Default is true.', verbose_name='In Stock?')),
                ('backorders', models.CharField(choices=[('no', 'Do Not Allow'), ('notify', 'Allow, But Notify Customer'), ('yes', 'Allow')], default='no', help_text='If managing stock, this controls if backorders are allowed. If enabled, stock quantity can go below 0. Default is no. Options are: no (Do not allow), notify (Allow, but notify customer), and yes (Allow).', max_length=255, verbose_name='Backorders')),
                ('backorders_allowed', models.BooleanField(default=False, help_text='READONLY. Shows if backorders are allowed.', verbose_name='Backorders Allowed?')),
                ('backordered', models.BooleanField(default=False, help_text='READONLY. Shows if a product is on backorder (if the product have the stock_quantity negative).', verbose_name='Backordered?')),
                ('sold_individually', models.BooleanField(default=False, help_text='Allow one item to be bought in a single order. Default is false.', verbose_name='Sold Individually?')),
                ('dimension_length', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Length')),
                ('dimension_width', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Width')),
                ('dimension_height', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Height')),
                ('weight', models.DecimalField(decimal_places=2, default=0, help_text='Product weight in decimal format.', max_digits=10, verbose_name='Weight')),
                ('shipping_required', models.BooleanField(default=False, help_text='READONLY. Shows if the product need to be shipped.', verbose_name='Requires Shipping?')),
                ('shipping_taxable', models.BooleanField(default=False, help_text='READONLY. Shows whether or not the product shipping is taxable.', verbose_name='Taxable Shipping?')),
                ('reviews_allowed', models.BooleanField(default=True, help_text='Allow reviews. Default is true.', verbose_name='Reviewed Allowed?')),
                ('average_rating', models.CharField(blank=True, default='', help_text='READONLY. Reviews average rating.', max_length=15, null=True, verbose_name='Average Rating')),
                ('rating_count', models.IntegerField(default=0, help_text='READONLY. Amount of reviews that the product have.', verbose_name='Rating Count')),
                ('purchase_note', models.CharField(blank=True, default='', help_text='Optional note to send the customer after purchase.', max_length=255, null=True, verbose_name='Purchase Note')),
                ('menu_order', models.IntegerField(default=0, help_text='Menu order, used to custom sort products.', verbose_name='Menu Order')),
                ('attributes', models.ManyToManyField(blank=True, related_name='attributes', to='outlet_woocommerce.wooAttribute', verbose_name='Attributes')),
                ('categories', models.ManyToManyField(blank=True, to='outlet_woocommerce.wooCategory', verbose_name='Categories')),
                ('default_attributes', models.ManyToManyField(blank=True, related_name='default_attributes', to='outlet_woocommerce.wooAttribute', verbose_name='Default Attributes')),
                ('images', models.ManyToManyField(blank=True, to='outlet_woocommerce.wooImage', verbose_name='Images')),
                ('parent', models.ForeignKey(blank=True, help_text='Product parent.', null=True, on_delete=django.db.models.deletion.CASCADE, to='outlet_woocommerce.wooProduct', verbose_name='Parent')),
            ],
            options={
                'verbose_name_plural': 'Products',
                'verbose_name': 'Product',
                'ordering': ['name', 'wid'],
            },
        ),
        migrations.CreateModel(
            name='wooShippingClass',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('wid', models.CharField(blank=True, default='', max_length=64, null=True, verbose_name='Woo ID')),
                ('name', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Name')),
                ('slug', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('count', models.IntegerField(default=0, verbose_name='Count')),
            ],
            options={
                'verbose_name_plural': 'Shipping Classes',
                'verbose_name': 'Shipping Class',
                'ordering': ['name', 'wid'],
            },
        ),
        migrations.CreateModel(
            name='wooStore',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(blank=True, default='', help_text='Generally, a two-character uppercase code. Used in SKUs.', max_length=16, null=True, verbose_name='Code')),
                ('name', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Name')),
                ('base_url', models.URLField(blank=True, default='', help_text="Include the schema and FQDN only (e.g., 'https://example.com'). No trailing slash.", null=True, verbose_name='Base URL')),
                ('consumer_key', models.CharField(blank=True, max_length=43, null=True, verbose_name='Consumer Key')),
                ('consumer_secret', models.CharField(blank=True, max_length=43, null=True, verbose_name='Consumer Secret')),
                ('timezone', timezone_field.fields.TimeZoneField(default='America/New_York')),
                ('verify_ssl', models.BooleanField(default=True, help_text='Uncheck this if you are using a self-signed SSL certificate to disable ssl verification.', verbose_name='Verify SSL?')),
            ],
            options={
                'verbose_name_plural': 'Stores',
                'verbose_name': 'Store',
                'ordering': ['name', 'code'],
            },
        ),
        migrations.CreateModel(
            name='wooTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('wid', models.IntegerField(default=0, verbose_name='Woo ID')),
                ('name', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Name')),
                ('slug', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('count', models.IntegerField(default=0, verbose_name='Count')),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outlet_woocommerce.wooStore')),
            ],
            options={
                'verbose_name_plural': 'Product Tags',
                'verbose_name': 'Product Tag',
                'ordering': ['store', 'name'],
            },
        ),
        migrations.CreateModel(
            name='wooTerm',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('wid', models.CharField(blank=True, default='', max_length=16, null=True, verbose_name='Woo ID')),
                ('name', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Name')),
                ('slug', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Slug')),
                ('menu_order', models.IntegerField(default=0, verbose_name='Menu Order')),
                ('count', models.IntegerField(default=0, verbose_name='Count')),
                ('wr_tooltip', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='WR Tooltip')),
                ('wr_color', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='WR Color')),
                ('wr_label', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='WR Label')),
                ('productattribute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outlet_woocommerce.wooAttribute', verbose_name='Product Attribute')),
            ],
            options={
                'verbose_name_plural': 'Product Attribute Terms',
                'verbose_name': 'Product Attribute Term',
                'ordering': ['menu_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='wooVariant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('wid', models.CharField(blank=True, default='', max_length=64, null=True, verbose_name='Woo ID')),
                ('name', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Name')),
                ('slug', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('count', models.IntegerField(default=0, verbose_name='Count')),
            ],
            options={
                'verbose_name_plural': 'Variants',
                'verbose_name': 'Variant',
                'ordering': ['name', 'wid'],
            },
        ),
        migrations.CreateModel(
            name='wpMedia',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('alt_text', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Alternate Text')),
                ('media_type', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Media Type')),
                ('width', models.IntegerField(default=0, verbose_name='Width')),
                ('height', models.IntegerField(default=0, verbose_name='Height')),
                ('file', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='File')),
                ('author', models.IntegerField(default=0, verbose_name='Author')),
                ('mime_type', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='MIME Type')),
                ('comment_status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed')], default='open', max_length=255, verbose_name='Comment Status')),
                ('post', models.IntegerField(default=0, verbose_name='Post ID')),
                ('wid', models.CharField(blank=True, default='', max_length=16, null=True, verbose_name='ID')),
                ('source_url', models.URLField(blank=True, null=True, verbose_name='Source URL')),
                ('template', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Template')),
                ('ping_status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed')], default='open', max_length=255, verbose_name='Ping Status')),
                ('date', models.DateTimeField(blank=True, null=True, verbose_name='Date')),
                ('caption', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Caption')),
                ('link', models.URLField(blank=True, default='', null=True, verbose_name='Link')),
                ('slug', models.CharField(blank=True, max_length=255, null=True, verbose_name='Slug')),
                ('modified', models.DateTimeField(blank=True, null=True, verbose_name='Modified')),
                ('guid', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='GUID')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('modified_gmt', models.DateTimeField(blank=True, null=True, verbose_name='Modified GMT')),
                ('title', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Title')),
                ('date_gmt', models.DateTimeField(blank=True, null=True, verbose_name='Date GMT')),
                ('type', models.CharField(blank=True, default='', max_length=64, null=True, verbose_name='Type')),
                ('woostore', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outlet_woocommerce.wooStore')),
            ],
            options={
                'verbose_name_plural': 'Media',
                'verbose_name': 'Media',
                'ordering': ['title', 'guid'],
            },
        ),
        migrations.CreateModel(
            name='wpMediaSize',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('name', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Name')),
                ('file', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='File')),
                ('mime_type', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='MIME Type')),
                ('width', models.IntegerField(default=0, verbose_name='Width')),
                ('height', models.IntegerField(default=0, verbose_name='Height')),
                ('source_url', models.URLField(blank=True, default='', null=True, verbose_name='Source URL')),
                ('wpmedia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outlet_woocommerce.wpMedia', verbose_name='Media')),
            ],
            options={
                'verbose_name_plural': 'Media Sizes',
                'verbose_name': 'Media Size',
                'ordering': ['name', 'file'],
            },
        ),
        migrations.AddField(
            model_name='wooproduct',
            name='shipping_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outlet_woocommerce.wooShippingClass'),
        ),
        migrations.AddField(
            model_name='wooproduct',
            name='tags',
            field=models.ManyToManyField(blank=True, to='outlet_woocommerce.wooTag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='wooproduct',
            name='variations',
            field=models.ManyToManyField(blank=True, to='outlet_woocommerce.wooVariant', verbose_name='Variations'),
        ),
        migrations.AddField(
            model_name='wooproduct',
            name='woostore',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outlet_woocommerce.wooStore', verbose_name='Store'),
        ),
        migrations.AddField(
            model_name='woocategory',
            name='store',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outlet_woocommerce.wooStore'),
        ),
        migrations.AddField(
            model_name='wooattribute',
            name='store',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outlet_woocommerce.wooStore'),
        ),
    ]
